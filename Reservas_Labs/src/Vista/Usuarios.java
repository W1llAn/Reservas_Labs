package Vista;

import Controladores.MenuControlador;
import Modelos.Usuario_2;
import Modelos.Usuario_2DB;
import Modelos.Validacion;
import Modelos.hash;
import java.awt.Image;
import java.awt.event.KeyEvent;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;

public class Usuarios extends javax.swing.JFrame {

    private Usuario_2 user;
    private Usuario_2DB userDB;
    private DefaultTableModel modelo;
    private List<Usuario_2> lu;
    private DefaultComboBoxModel modeloCombo;
    private Validacion validar;

    public Usuarios() {
        initComponents();
         setLocationRelativeTo(null);
        //user = new Usuario_2();
        userDB = new Usuario_2DB();
        this.lbl_ID.setVisible(false);
        ImageIcon fondo = new ImageIcon("src\\imagenes\\FondoN.png");
        int ancho=this.lblFondo.getWidth(), largo = this.lblFondo.getHeight();
         Image imagenEscalada = fondo.getImage().getScaledInstance(ancho, largo, Image.SCALE_SMOOTH);
         ImageIcon imagenFinal = new ImageIcon(imagenEscalada);
         this.lblFondo.setIcon(imagenFinal);
        this.lblMensaje.setVisible(false);
        modelo = new DefaultTableModel(new String[]{"ID", "USUARIO", "CORREO", "NOMBRE", "APELLIDO", "ROL"}, 0);
        comboRol.setModel(modeloCombo = new DefaultComboBoxModel<>(new String[]{"SELECCIONE", "DOCENTE", "ESTUDIANTE"}));
        filtro.setModel(modeloCombo = new DefaultComboBoxModel<>(new String[]{"FILTAR POR :", "USUARIO", "APELLIDO", "ROL"}));
        cargarTabla();
        

    }

    private void cargarTabla() {
        lu = userDB.listaUsuarios();
        modelo.setRowCount(0);
        for (Usuario_2 u : lu) {
            modelo.addRow(new Object[]{u.getId(), u.getNombreUsuario(), u.getCorreo(), u.getNombre(), u.getApellido(), u.getRol()});
        }
        this.tablaUsuarios.setModel(modelo);

    }

    private boolean camposEstanVacios() {
        JTextField[] campos = {txtNombre, txtApellido, txtNombreUsuario, txtPass, txtEmail};

        for (JTextField campo : campos) {
            if (campo == null || campo.getText().trim().isEmpty()) {
                return true;  // Se encontró un campo vacío o null
            }
        }

        return false;  // Todos los campos tienen contenido
    }

    private void limpiar() {
        txtNombre.setText("");
        txtApellido.setText("");
        txtNombreUsuario.setText("");
        txtPass.setText("");
        txtRepeatPass.setText("");
        txtEmail.setText("");
        txtBuscar.setText("");
        comboRol.setSelectedIndex(0);
        this.lblMensaje.setVisible(false);
        this.lbl_ID.setText("");
        this.filtro.setSelectedIndex(0);
        cargarTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaUsuarios = new javax.swing.JTable();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        txtApellido = new javax.swing.JTextField();
        txtNombreUsuario = new javax.swing.JTextField();
        botonEditar = new javax.swing.JButton();
        botonLimpiar = new javax.swing.JButton();
        botonElminar = new javax.swing.JButton();
        botonAgregar = new javax.swing.JButton();
        txtRepeatPass = new javax.swing.JPasswordField();
        txtPass = new javax.swing.JPasswordField();
        jLabel18 = new javax.swing.JLabel();
        txtBuscar = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        comboRol = new javax.swing.JComboBox<>();
        lbl_ID = new javax.swing.JLabel();
        filtro = new javax.swing.JComboBox<>();
        lblMensaje = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        lblFondo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        setSize(new java.awt.Dimension(930, 600));

        jPanel1.setBackground(new java.awt.Color(212, 215, 224));
        jPanel1.setPreferredSize(new java.awt.Dimension(930, 650));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(147, 10, 13));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 6, 930, -1));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("ADMINISTRACIÓN DE USUARIOS");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(264, 54, -1, -1));

        tablaUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaUsuarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaUsuariosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaUsuarios);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(281, 180, 620, 250));

        jLabel16.setBackground(new java.awt.Color(212, 215, 224));
        jLabel16.setFont(new java.awt.Font("Constantia", 1, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(0, 0, 0));
        jLabel16.setText("Nombre:");
        jPanel1.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(33, 156, -1, -1));

        jLabel17.setBackground(new java.awt.Color(212, 215, 224));
        jLabel17.setFont(new java.awt.Font("Constantia", 1, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(0, 0, 0));
        jLabel17.setText("Apellido:");
        jPanel1.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(33, 214, -1, -1));

        jLabel19.setBackground(new java.awt.Color(212, 215, 224));
        jLabel19.setFont(new java.awt.Font("Constantia", 1, 14)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(0, 0, 0));
        jLabel19.setText("Email:");
        jPanel1.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(33, 272, -1, -1));

        jLabel20.setBackground(new java.awt.Color(212, 215, 224));
        jLabel20.setFont(new java.awt.Font("Constantia", 1, 14)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(0, 0, 0));
        jLabel20.setText(" Nombre de Usuario:");
        jPanel1.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(33, 336, -1, -1));

        jLabel21.setBackground(new java.awt.Color(212, 215, 224));
        jLabel21.setFont(new java.awt.Font("Constantia", 1, 14)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(0, 0, 0));
        jLabel21.setText("Contraseña:");
        jPanel1.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(33, 466, -1, -1));

        jLabel22.setBackground(new java.awt.Color(212, 215, 224));
        jLabel22.setFont(new java.awt.Font("Constantia", 1, 14)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(0, 0, 0));
        jLabel22.setText("Repita su Contraseña:");
        jPanel1.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(33, 528, -1, -1));

        txtNombre.setFont(new java.awt.Font("Constantia", 0, 14)); // NOI18N
        jPanel1.add(txtNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(33, 180, 180, 28));

        txtEmail.setFont(new java.awt.Font("Constantia", 0, 14)); // NOI18N
        jPanel1.add(txtEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(33, 296, 230, 28));

        txtApellido.setFont(new java.awt.Font("Constantia", 0, 14)); // NOI18N
        jPanel1.add(txtApellido, new org.netbeans.lib.awtextra.AbsoluteConstraints(33, 238, 180, 28));

        txtNombreUsuario.setFont(new java.awt.Font("Constantia", 0, 14)); // NOI18N
        jPanel1.add(txtNombreUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(33, 360, 180, 28));

        botonEditar.setBackground(new java.awt.Color(204, 204, 204));
        botonEditar.setFont(new java.awt.Font("Constantia", 1, 15)); // NOI18N
        botonEditar.setForeground(new java.awt.Color(0, 0, 0));
        botonEditar.setText("Editar");
        botonEditar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(255, 255, 255), new java.awt.Color(255, 255, 255), new java.awt.Color(0, 0, 0), new java.awt.Color(255, 255, 255)));
        botonEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEditarActionPerformed(evt);
            }
        });
        jPanel1.add(botonEditar, new org.netbeans.lib.awtextra.AbsoluteConstraints(544, 474, 111, -1));

        botonLimpiar.setBackground(new java.awt.Color(204, 204, 204));
        botonLimpiar.setFont(new java.awt.Font("Constantia", 1, 15)); // NOI18N
        botonLimpiar.setForeground(new java.awt.Color(0, 0, 0));
        botonLimpiar.setText("Limpiar");
        botonLimpiar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(255, 255, 255), new java.awt.Color(255, 255, 255), new java.awt.Color(0, 0, 0), new java.awt.Color(255, 255, 255)));
        botonLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonLimpiarActionPerformed(evt);
            }
        });
        jPanel1.add(botonLimpiar, new org.netbeans.lib.awtextra.AbsoluteConstraints(281, 112, 111, -1));

        botonElminar.setBackground(new java.awt.Color(204, 204, 204));
        botonElminar.setFont(new java.awt.Font("Constantia", 1, 15)); // NOI18N
        botonElminar.setForeground(new java.awt.Color(0, 0, 0));
        botonElminar.setText("Elminar");
        botonElminar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(255, 255, 255), new java.awt.Color(255, 255, 255), new java.awt.Color(0, 0, 0), new java.awt.Color(255, 255, 255)));
        botonElminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonElminarActionPerformed(evt);
            }
        });
        jPanel1.add(botonElminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(703, 474, 111, -1));

        botonAgregar.setBackground(new java.awt.Color(204, 204, 204));
        botonAgregar.setFont(new java.awt.Font("Constantia", 1, 15)); // NOI18N
        botonAgregar.setForeground(new java.awt.Color(0, 0, 0));
        botonAgregar.setText("Agregar");
        botonAgregar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(255, 255, 255), new java.awt.Color(255, 255, 255), new java.awt.Color(0, 0, 0), new java.awt.Color(255, 255, 255)));
        botonAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAgregarActionPerformed(evt);
            }
        });
        jPanel1.add(botonAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(368, 474, 111, -1));

        txtRepeatPass.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jPanel1.add(txtRepeatPass, new org.netbeans.lib.awtextra.AbsoluteConstraints(33, 552, 180, 30));

        txtPass.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jPanel1.add(txtPass, new org.netbeans.lib.awtextra.AbsoluteConstraints(33, 490, 180, 30));

        jLabel18.setBackground(new java.awt.Color(212, 215, 224));
        jLabel18.setFont(new java.awt.Font("Constantia", 1, 14)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(0, 0, 0));
        jLabel18.setText("Buscar:");
        jPanel1.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(488, 116, -1, -1));

        txtBuscar.setFont(new java.awt.Font("Constantia", 0, 14)); // NOI18N
        txtBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBuscarActionPerformed(evt);
            }
        });
        txtBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBuscarKeyPressed(evt);
            }
        });
        jPanel1.add(txtBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(544, 111, 166, 28));

        jLabel23.setBackground(new java.awt.Color(212, 215, 224));
        jLabel23.setFont(new java.awt.Font("Constantia", 1, 14)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(0, 0, 0));
        jLabel23.setText("Tipo de Usuario");
        jPanel1.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(33, 400, -1, -1));

        comboRol.setFont(new java.awt.Font("Constantia", 0, 14)); // NOI18N
        jPanel1.add(comboRol, new org.netbeans.lib.awtextra.AbsoluteConstraints(33, 424, 162, 30));
        jPanel1.add(lbl_ID, new org.netbeans.lib.awtextra.AbsoluteConstraints(265, 457, 23, 15));

        filtro.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                filtroItemStateChanged(evt);
            }
        });
        jPanel1.add(filtro, new org.netbeans.lib.awtextra.AbsoluteConstraints(728, 110, 160, 25));

        lblMensaje.setBackground(new java.awt.Color(212, 215, 224));
        lblMensaje.setFont(new java.awt.Font("Constantia", 2, 11)); // NOI18N
        lblMensaje.setForeground(new java.awt.Color(0, 0, 0));
        lblMensaje.setText("No Hay Coincidencias");
        jPanel1.add(lblMensaje, new org.netbeans.lib.awtextra.AbsoluteConstraints(556, 145, 123, -1));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/back_Home.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(841, 516, 60, 60));

        lblFondo.setText("jLabel1");
        jPanel1.add(lblFondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 930, 560));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed

    }//GEN-LAST:event_btnEditActionPerformed

    private void txtBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBuscarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBuscarActionPerformed

    private void botonAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAgregarActionPerformed

        if (camposEstanVacios()) {
            // Mostrar un mensaje de error o realizar alguna acción
            JOptionPane.showMessageDialog(this, "Por favor, complete todos los campos", "Error", JOptionPane.ERROR_MESSAGE);
        } else {

            if (Validacion.isValidWord(this.txtNombre.getText()) || Validacion.isValidWord(this.txtApellido.getText())) {
                if (Validacion.isValidEmail(this.txtEmail.getText())) {
                    if (Validacion.isValidUsername(this.txtNombreUsuario.getText())) {
                        if (this.comboRol.getSelectedIndex() != 0) {
                            if (Validacion.isValidPassword(new String(this.txtPass.getPassword()))) {
                                if (new String(this.txtPass.getPassword()).equals(new String(this.txtRepeatPass.getPassword()))) {
                                    String contraCifrada = hash.sha1(new String(this.txtPass.getPassword()));
                                    String rol = this.comboRol.getSelectedItem().toString();
                                    user = new Usuario_2(this.txtNombreUsuario.getText(), contraCifrada, this.txtEmail.getText(),
                                            this.txtNombre.getText(), this.txtApellido.getText(), rol);

                                    if (userDB.crearUsuario(user)) {
                                        JOptionPane.showMessageDialog(this, "el usuario se creo exitosamente", "Información", JOptionPane.INFORMATION_MESSAGE);

                                        limpiar();

                                    } else {
                                        JOptionPane.showMessageDialog(this, "No se pudo Crear sus usuario, intentelo de nuevo", "Información", JOptionPane.INFORMATION_MESSAGE);
                                    }
                                } else {
                                    JOptionPane.showMessageDialog(this, "Las contraseñas no coinciden", "Error", JOptionPane.ERROR_MESSAGE);
                                }
                            } else {
                                JOptionPane.showMessageDialog(this, "Su contraseña debe tener al menos diez caracteres", "Información", JOptionPane.INFORMATION_MESSAGE);
                            }
                        } else {
                            JOptionPane.showMessageDialog(this, "Porfavor elija un rol", "Información", JOptionPane.INFORMATION_MESSAGE);
                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "Su nombre de usuario puede contener solo numeros o letras y no debe tener espacios", "Error", JOptionPane.ERROR_MESSAGE);
                    }

                } else {
                    JOptionPane.showMessageDialog(this, "Por favor, ingrese un email valido", "Información", JOptionPane.INFORMATION_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Por favor, ingrese un solo nombre o apellido\n No incluya números", "Información", JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }//GEN-LAST:event_botonAgregarActionPerformed

    private void botonEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEditarActionPerformed
        if (camposEstanVacios()) {
            // Mostrar un mensaje de error o realizar alguna acción
            JOptionPane.showMessageDialog(this, "Por favor, complete todos los campos", "Error", JOptionPane.ERROR_MESSAGE);
        } else {

            if (!this.lbl_ID.getText().isEmpty()) {

                if (Validacion.isValidWord(this.txtNombre.getText()) || Validacion.isValidWord(this.txtApellido.getText())) {
                    if (Validacion.isValidEmail(this.txtEmail.getText())) {
                        if (Validacion.isValidUsername(this.txtNombreUsuario.getText())) {
                            if (this.comboRol.getSelectedIndex() != 0) {
                                if (Validacion.isValidPassword(new String(this.txtPass.getPassword()))) {
                                    if (new String(this.txtPass.getPassword()).equals(new String(this.txtRepeatPass.getPassword()))) {
                                        int id = Integer.valueOf(this.lbl_ID.getText());
                                        String contraCifrada = hash.sha1(new String(this.txtPass.getPassword()));
                                        String rol = this.comboRol.getSelectedItem().toString();
                                        user = new Usuario_2(id, this.txtNombreUsuario.getText(), contraCifrada, this.txtEmail.getText(),
                                                this.txtNombre.getText(), this.txtApellido.getText(), rol);

                                        if (userDB.modificarUsuario(user)) {
                                            JOptionPane.showMessageDialog(this, "el usuario se modifico exitosamente", "Información", JOptionPane.INFORMATION_MESSAGE);

                                            limpiar();

                                        } else {
                                            JOptionPane.showMessageDialog(this, "No se pudo modificar su usuario, intentelo de nuevo", "Información", JOptionPane.INFORMATION_MESSAGE);
                                        }
                                    } else {
                                        JOptionPane.showMessageDialog(this, "Las contraseñas no coinciden", "Error", JOptionPane.ERROR_MESSAGE);
                                    }
                                } else {
                                    JOptionPane.showMessageDialog(this, "Su contraseña debe tener al menos diez caracteres", "Información", JOptionPane.INFORMATION_MESSAGE);
                                }
                            } else {
                                JOptionPane.showMessageDialog(this, "Porfavor elija un rol", "Información", JOptionPane.INFORMATION_MESSAGE);
                            }
                        } else {
                            JOptionPane.showMessageDialog(this, "Su nombre de usuario puede contener solo numeros o letras y no debe tener espacios", "Error", JOptionPane.ERROR_MESSAGE);
                        }

                    } else {
                        JOptionPane.showMessageDialog(this, "Por favor, ingrese un email valido", "Información", JOptionPane.INFORMATION_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Por favor, ingrese un solo nombre o apellido\n No incluya números", "Información", JOptionPane.INFORMATION_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Por favor, seleccione el usuario a modificar", "Advertencia", JOptionPane.INFORMATION_MESSAGE);

            }

        }
    }//GEN-LAST:event_botonEditarActionPerformed

    private void botonLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonLimpiarActionPerformed
        limpiar();
    }//GEN-LAST:event_botonLimpiarActionPerformed

    private Usuario_2 dataUser(int id) {
        for (Usuario_2 u : lu) {
            if (u.getId() == id) {
                //System.out.println(u);
                return u;
            }
        }
        return null;
    }


    private void tablaUsuariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaUsuariosMouseClicked
        int fila = this.tablaUsuarios.rowAtPoint(evt.getPoint());
        if (this.tablaUsuarios.getValueAt(fila, 0).toString() == null
                || this.tablaUsuarios.getValueAt(fila, 0).toString().isEmpty()) {

        } else {
            try {
                int id = Integer.valueOf(this.tablaUsuarios.getValueAt(fila, 0).toString());
                Usuario_2 userdata = this.dataUser(id);
                this.lbl_ID.setText(String.valueOf(userdata.getId()));
                this.txtNombreUsuario.setText(userdata.getNombreUsuario());
                this.txtEmail.setText(userdata.getCorreo());
                //this.txtPass.setText(userdata.getPassword());
                //this.txtRepeatPass.setText(userdata.getPassword());
                this.txtNombre.setText(userdata.getNombre());
                this.txtApellido.setText(userdata.getApellido());
            } catch (Exception e) {
                System.out.println(e);
            }

        }


    }//GEN-LAST:event_tablaUsuariosMouseClicked

    private void botonElminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonElminarActionPerformed

        if (this.lbl_ID.getText() != null || !this.lbl_ID.getText().trim().isEmpty()) {
            int confirmacion = JOptionPane.showConfirmDialog(
                    this,
                    "¿Está seguro de que desea eliminar este usuario?",
                    "Confirmar eliminación",
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.WARNING_MESSAGE
            );

            if (confirmacion == JOptionPane.YES_OPTION) {
                int id = Integer.valueOf(this.lbl_ID.getText());
                if (userDB.eliminarUsuario(id)) {
                    cargarTabla();
                    limpiar();
                    JOptionPane.showMessageDialog(this, "El usuario ha sido eliminado correctamente", "Información", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "No se pudo eliminar el usuario", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Operación de eliminación cancelada", "Información", JOptionPane.INFORMATION_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Por favor, seleccione el usuario a eliminar", "Advertencia", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_botonElminarActionPerformed

    private String getFiltro() {
        if (this.filtro.getSelectedIndex() == 1) {
            return "nombre_usuario";
        }
        if (this.filtro.getSelectedIndex() == 2) {
            return "apellido";
        }
        if (this.filtro.getSelectedIndex() == 3) {
            return "rol";
        }
        return null;
    }

    private void buscarUsuarioPorFiltro() {

        if (this.filtro.getSelectedIndex() != 0) {
            if (!this.txtBuscar.getText().isEmpty()) {
                lu = userDB.buscarUsuariosPor(getFiltro(), this.txtBuscar.getText());
                if (!lu.isEmpty()) {
                    modelo.setRowCount(0);
                    for (Usuario_2 u : lu) {
                        modelo.addRow(new Object[]{u.getId(), u.getNombreUsuario(), u.getCorreo(), u.getNombre(), u.getApellido(), u.getRol()});
                    }
                } else {
                    cargarTabla();
                    this.lblMensaje.setVisible(true);
                }
                this.tablaUsuarios.setModel(modelo);
            }
        } else {
            cargarTabla();
        }

    }

    private void filtroItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_filtroItemStateChanged


    }//GEN-LAST:event_filtroItemStateChanged

    private void txtBuscarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            buscarUsuarioPorFiltro();
        }
    }//GEN-LAST:event_txtBuscarKeyPressed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        MenuControlador menu = new MenuControlador();
            this.setVisible(false);
            menu.iniciar();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Usuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Usuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Usuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Usuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Usuarios().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton botonAgregar;
    public javax.swing.JButton botonEditar;
    public javax.swing.JButton botonElminar;
    public javax.swing.JButton botonLimpiar;
    private javax.swing.JComboBox<String> comboRol;
    private javax.swing.JComboBox<String> filtro;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JLabel lblFondo;
    private javax.swing.JLabel lblMensaje;
    private javax.swing.JLabel lbl_ID;
    public javax.swing.JTable tablaUsuarios;
    private javax.swing.JTextField txtApellido;
    private javax.swing.JTextField txtBuscar;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtNombreUsuario;
    private javax.swing.JPasswordField txtPass;
    private javax.swing.JPasswordField txtRepeatPass;
    // End of variables declaration//GEN-END:variables

}
